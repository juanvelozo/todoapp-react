{"version":3,"sources":["components/ToDoAdd.js","hooks/useForm.js","components/ToDoListItem.js","components/ToDoList.js","components/toDoReducer.js","components/ToDoApp.js","index.js"],"names":["ToDoAdd","handleAddToDo","initialState","useState","values","setvalues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newToDo","id","Date","getTime","desc","done","type","className","placeholder","autoComplete","onChange","ToDoListItem","todo","index","handleToggle","handleDelete","onClick","ToDoList","toDos","map","i","toDoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","ToDoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08e9259a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nexport const ToDoAdd = ({ handleAddToDo }) => {\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n\r\n    const newToDo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n    handleAddToDo(newToDo);\r\n    reset();\r\n  };\r\n  return (\r\n    <div>\r\n      <h4>Add To Do</h4>\r\n      <hr />\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          placeholder=\"Learn...,Buy...,Call...\"\r\n          autoComplete=\"off\"\r\n          value={description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-success mt-1 btn-block\"\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setvalues] = useState(initialState);\r\n  const reset=()=>{\r\n    setvalues(initialState);\r\n  }\r\n  const handleInputChange = ({ target }) => {\r\n    setvalues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ToDoListItem = ({todo, index, handleToggle, handleDelete}) => {\r\n  return (\r\n    <li key={todo.id} className=\"list-group-item\">\r\n      <p\r\n        className={`${todo.done && \"complete\"}`}\r\n        onClick={() => handleToggle(todo.id)}\r\n      >\r\n        {\" #\"}\r\n        {index + 1}{\"- \"}{todo.desc}{\" \"}\r\n      </p>\r\n      <button className=\"btn btn-danger \" onClick={() => handleDelete(todo.id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ToDoListItem } from \"./ToDoListItem\";\r\n\r\nexport const ToDoList = ({ toDos, handleDelete, handleToggle }) => {\r\n  return (\r\n    <ul className=\"list-group-flush\">\r\n      {toDos.map((todo, i) => (\r\n        <ToDoListItem\r\n        key={todo.id}\r\n            todo = {todo}\r\n            index={i}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","export const toDoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n    case \"delete\":\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n    case \"toggle\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    // case \"toggle\":\r\n    //   return state.map((todo) => {\r\n    //     if (todo.id === action.payload) {\r\n    //       return { ...todo, done: !todo.done };\r\n    //     } else {\r\n    //       return todo;\r\n    //     }\r\n    //   });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { ToDoAdd } from \"./ToDoAdd\";\r\nimport { ToDoList } from \"./ToDoList\";\r\nimport { toDoReducer } from \"./toDoReducer\";\r\nimport \"./ToDoStyles.css\";\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem(\"toDos\")) || [];\r\n};\r\nexport const ToDoApp = () => {\r\n  const [toDos, dispatch] = useReducer(toDoReducer, [], init);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"toDos\", JSON.stringify(toDos));\r\n  }, [toDos]);\r\n  const handleDelete = (todoId) => {\r\n    const action = {\r\n      type: \"delete\",\r\n      payload: todoId,\r\n    };\r\n    dispatch(action);\r\n  };\r\n  const handleToggle = (todoId) => {\r\n    dispatch({\r\n      type: \"toggle\",\r\n      payload: todoId,\r\n    });\r\n  };\r\n  const handleAddToDo = (newToDo) => {\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: newToDo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">To Do App ({toDos.length})</h1>\r\n      <p className=\"text-center\">(Haga clic en el item para marcarlo/desmarcarlo como hecho/deshecho)</p>\r\n      <h6 className=\"text-muted text-center\">Hecho por Juan Velozo</h6>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 col-md-7 col-sm-8\">\r\n          <ToDoList\r\n            toDos={toDos}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-4 col-md-5 col-sm-4\">\r\n          <ToDoAdd\r\n          handleAddToDo={handleAddToDo}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ToDoApp } from './components/ToDoApp';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ToDoApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}